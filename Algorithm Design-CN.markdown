# 算法设计技巧

当需要找到一个算法来解决新问题的时候要做什么呢？

### 是否与另一个问题相似？

如果可以把问题概括成另一个更一般的问题的话，那么就可以使用已经存在的算法。为什么要发明轮子呢？

我喜欢 Steven Skiena 的 [算法设计手册](http://www.algorist.com)的一个重要原因就是，它里面包含了一个你可以用的问题和解决方案的目录(参考[algorithm repository](http://www.algorist.com)).

### 简单粗暴的开始并没有错

简单粗暴的方法通常在实际中比较慢，但他们是一个很好的开始。通过简单粗暴的解决方法，你可以学会理解问题到底是什么。

当有了一个简单粗暴的实现的时候，可以拿这个来验证你做的改进是不是对的。

如果你只是与小数据量打交道的刷，简单粗暴的方法在实际中可能更好。不要掉入过早优化的陷阱。

### 分而治之

一个大问题通常是一堆小问题的集合。

[更多]


